import streamlit as st
import torch
import torch.nn as nn
import cv2
from ultralytics import YOLO
import numpy as np

class MushroomModelV0(nn.Module):
    def __init__(self):
        super().__init__()

        self.layer_1 = nn.Linear(in_features=22, out_features=50)
        self.layer_2 = nn.Linear(in_features=50, out_features=1)
        self.relu = nn.ReLU()


    def forward(self, x):
        return self.layer_2(self.relu(self.layer_1(x)))


# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö
st.set_page_config(page_title="‡πÄ‡∏´‡πá‡∏î‡∏≠‡∏¥‡∏´‡∏¢‡∏±‡∏á", layout="wide")

# ‡πÉ‡∏ä‡πâ CSS ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á Sidebar ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡πå‡∏î
st.markdown(
    """
    <style>
        .sidebar-card {
            background-color: #f8f9fa;
            padding: 15px;
            border-radius: 10px;
            margin-bottom: 10px;
            text-align: center;
            cursor: pointer;
            transition: all 0.3s;
            font-weight: bold;
            border: 2px solid transparent;
        }
        .selected-card {
            background-color: #007bff !important;
            color: white !important;
            border: 2px solid #0056b3;
            font-weight: bold;
        }
        .sidebar-title {
            font-size: 24px;
            font-weight: bold;
            text-align: center;
            margin-bottom: 20px;
        }
    </style>
    """,
    unsafe_allow_html=True
)

if "selected_option" not in st.session_state:
    st.session_state.selected_option = "default"

st.sidebar.title("üçÑ Menu üîçüçÑ")

menu_options = ["‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÄ‡∏´‡πá‡∏î‡∏î‡πâ‡∏ß‡∏¢‡∏†‡∏≤‡∏û", "‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÄ‡∏´‡πá‡∏î‡πÅ‡∏ö‡∏ö‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î"]

for option in menu_options:
    if st.sidebar.button(option, use_container_width=True):
        st.session_state.selected_option = option

st.title("‡πÄ‡∏´‡πá‡∏î‡∏≠‡∏¥‡∏´‡∏¢‡∏±‡∏á üçÑ")

if st.session_state.selected_option == "default":
    col1, col2 = st.columns([2, 1])

    with col1:
        st.markdown(
            """
            ### üß† ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÄ‡∏´‡πá‡∏î‡∏î‡πâ‡∏ß‡∏¢ AI
            ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà‡πÅ‡∏≠‡∏õ‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡∏ô "‡πÄ‡∏´‡πá‡∏î‡∏≠‡∏¥‡∏´‡∏¢‡∏±‡∏á"  
            ‡πÅ‡∏≠‡∏õ‡∏ô‡∏µ‡πâ‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ä‡∏ô‡∏¥‡∏î‡∏Ç‡∏≠‡∏á‡πÄ‡∏´‡πá‡∏î‡πÑ‡∏î‡πâ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ **AI**  
            - üîç ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏à‡∏≤‡∏Å‡∏†‡∏≤‡∏û‡∏ñ‡πà‡∏≤‡∏¢  
            - üìã ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏à‡∏≤‡∏Å‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡∏Ç‡∏≠‡∏á‡πÄ‡∏´‡πá‡∏î  
              
            **‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏≤‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏ã‡πâ‡∏≤‡∏¢‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô**  
            """
        )

    with col2:
        st.image("mush_page.webp", caption="", use_container_width=True)

elif st.session_state.selected_option == "‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÄ‡∏´‡πá‡∏î‡∏î‡πâ‡∏ß‡∏¢‡∏†‡∏≤‡∏û":
    st.subheader("‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡πÄ‡∏´‡πá‡∏î‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì")
    uploaded_file = st.file_uploader("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå", type=["png", "jpg", "jpeg", "webp"])

    if uploaded_file:
        image = cv2.imdecode(np.frombuffer(uploaded_file.read(), np.uint8), cv2.IMREAD_COLOR)
        image_rgb = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
        st.image(image_rgb, caption="‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î", use_container_width=True)

        if st.button("üîç ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå"):
            model = YOLO("best.pt")
            image_size = 64
            
            # ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏†‡∏≤‡∏û
            image_resized = cv2.resize(image, (image_size, image_size))

            # ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢
            results = model.predict(image_resized)

            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            if len(results) > 0:
                confidence = results[0].probs
                confidence_enable_mush = confidence.data[0] * 100  # ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå
                confidence_poison_mush = confidence.data[1] * 100   # ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå

                # ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
                if confidence_enable_mush > confidence_poison_mush:
                    st.success(f"‚úÖ ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå: ‡πÄ‡∏´‡πá‡∏î‡∏ä‡∏ô‡∏¥‡∏î‡∏ô‡∏µ‡πâ‡∏Å‡∏¥‡∏ô‡πÑ‡∏î‡πâ (‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à: {confidence_enable_mush:.2f}%)")
                else:
                    st.error(f"‚ùå ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå: ‡πÄ‡∏´‡πá‡∏î‡∏ä‡∏ô‡∏¥‡∏î‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏û‡∏¥‡∏© (‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à: {confidence_poison_mush:.2f}%)")
            else:
                st.error("‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢")

elif st.session_state.selected_option == "‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÄ‡∏´‡πá‡∏î‡πÅ‡∏ö‡∏ö‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î":
    st.subheader("‡∏õ‡πâ‡∏≠‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏´‡πá‡∏î")
    attributes = {
        "‡∏£‡∏π‡∏õ‡∏£‡πà‡∏≤‡∏á‡∏´‡∏°‡∏ß‡∏Å‡πÄ‡∏´‡πá‡∏î": ["‡∏£‡∏∞‡∏Ü‡∏±‡∏á", "‡∏Å‡∏£‡∏ß‡∏¢", "‡πÇ‡∏Ñ‡πâ‡∏á‡∏ô‡∏π‡∏ô", "‡πÅ‡∏ö‡∏ô", "‡∏°‡∏µ‡∏¢‡∏≠‡∏î‡πÅ‡∏´‡∏•‡∏°", "‡∏ö‡∏∏‡πã‡∏°‡∏•‡∏∂‡∏Å"],
        "‡∏û‡∏∑‡πâ‡∏ô‡∏ú‡∏¥‡∏ß‡∏´‡∏°‡∏ß‡∏Å‡πÄ‡∏´‡πá‡∏î": ["‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏™‡πâ‡∏ô‡πÉ‡∏¢", "‡∏°‡∏µ‡∏£‡πà‡∏≠‡∏á", "‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏Å‡∏•‡πá‡∏î", "‡πÄ‡∏£‡∏µ‡∏¢‡∏ö"],
        "‡∏™‡∏µ‡∏´‡∏°‡∏ß‡∏Å‡πÄ‡∏´‡πá‡∏î": ["‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•", "‡∏Ñ‡∏£‡∏µ‡∏°", "‡∏≠‡∏ö‡πÄ‡∏ä‡∏¢", "‡πÄ‡∏ó‡∏≤", "‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß", "‡∏ä‡∏°‡∏û‡∏π", "‡∏°‡πà‡∏ß‡∏á", "‡πÅ‡∏î‡∏á", "‡∏Ç‡∏≤‡∏ß", "‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á"],
        "‡∏°‡∏µ‡∏£‡∏≠‡∏¢‡∏ä‡πâ‡∏≥‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà": ["‡∏°‡∏µ", "‡πÑ‡∏°‡πà‡∏°‡∏µ"],
        "‡∏Å‡∏•‡∏¥‡πà‡∏ô": ["‡∏≠‡∏±‡∏•‡∏°‡∏≠‡∏ô‡∏î‡πå", "‡πÇ‡∏õ‡πä‡∏¢‡∏Å‡∏±‡πä‡∏Å", "‡∏Å‡∏•‡∏¥‡πà‡∏ô‡πÑ‡∏´‡∏°‡πâ", "‡∏Å‡∏•‡∏¥‡πà‡∏ô‡∏õ‡∏•‡∏≤", "‡∏Å‡∏•‡∏¥‡πà‡∏ô‡πÄ‡∏´‡∏°‡πá‡∏ô", "‡∏Å‡∏•‡∏¥‡πà‡∏ô‡∏≠‡∏±‡∏ö", "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏•‡∏¥‡πà‡∏ô", "‡∏Å‡∏•‡∏¥‡πà‡∏ô‡∏â‡∏∏‡∏ô", "‡∏Å‡∏•‡∏¥‡πà‡∏ô‡πÄ‡∏ú‡πá‡∏î"],
        "‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏£‡∏µ‡∏ö": ["‡∏ï‡∏¥‡∏î‡∏Å‡πâ‡∏≤‡∏ô", "‡∏´‡πâ‡∏≠‡∏¢‡∏•‡∏á", "‡πÑ‡∏°‡πà‡∏ï‡∏¥‡∏î", "‡∏°‡∏µ‡∏£‡∏≠‡∏¢‡∏ö‡∏≤‡∏Å"],
        "‡∏£‡∏∞‡∏¢‡∏∞‡∏´‡πà‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏£‡∏µ‡∏ö": ["‡∏ä‡∏¥‡∏î", "‡πÅ‡∏ô‡πà‡∏ô", "‡∏´‡πà‡∏≤‡∏á"],
        "‡∏Ç‡∏ô‡∏≤‡∏î‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏£‡∏µ‡∏ö": ["‡∏Å‡∏ß‡πâ‡∏≤‡∏á", "‡πÅ‡∏Ñ‡∏ö"],
        "‡∏™‡∏µ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏£‡∏µ‡∏ö": ["‡∏î‡∏≥", "‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•", "‡∏Ñ‡∏£‡∏µ‡∏°", "‡∏ä‡πá‡∏≠‡∏Å‡πÇ‡∏Å‡πÅ‡∏•‡∏ï", "‡πÄ‡∏ó‡∏≤", "‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß", "‡∏™‡πâ‡∏°", "‡∏ä‡∏°‡∏û‡∏π", "‡∏°‡πà‡∏ß‡∏á", "‡πÅ‡∏î‡∏á", "‡∏Ç‡∏≤‡∏ß", "‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á"],
        "‡∏£‡∏π‡∏õ‡∏ó‡∏£‡∏á‡∏Å‡πâ‡∏≤‡∏ô": ["‡∏Ç‡∏¢‡∏≤‡∏¢‡∏Ç‡∏∂‡πâ‡∏ô", "‡πÄ‡∏£‡∏µ‡∏¢‡∏ß‡∏•‡∏á"],
        "‡∏£‡∏≤‡∏Å‡∏Ç‡∏≠‡∏á‡∏Å‡πâ‡∏≤‡∏ô": ["‡∏´‡∏±‡∏ß‡∏Å‡∏•‡∏°", "‡∏Å‡∏£‡∏∞‡∏ö‡∏≠‡∏Å", "‡∏ñ‡πâ‡∏ß‡∏¢", "‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ô", "‡∏°‡∏µ‡πÄ‡∏™‡πâ‡∏ô‡πÉ‡∏¢‡∏£‡∏≤‡∏Å", "‡∏ù‡∏±‡∏á‡∏£‡∏≤‡∏Å‡∏•‡∏∂‡∏Å", "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"],
        "‡∏û‡∏∑‡πâ‡∏ô‡∏ú‡∏¥‡∏ß‡∏Å‡πâ‡∏≤‡∏ô‡πÄ‡∏´‡∏ô‡∏∑‡∏≠‡∏ß‡∏á‡πÅ‡∏´‡∏ß‡∏ô": ["‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏™‡πâ‡∏ô‡πÉ‡∏¢", "‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏Å‡∏•‡πá‡∏î", "‡πÄ‡∏õ‡πá‡∏ô‡∏°‡∏±‡∏ô‡πÄ‡∏á‡∏≤", "‡πÄ‡∏£‡∏µ‡∏¢‡∏ö"],
        "‡∏û‡∏∑‡πâ‡∏ô‡∏ú‡∏¥‡∏ß‡∏Å‡πâ‡∏≤‡∏ô‡πÉ‡∏ï‡πâ‡∏ß‡∏á‡πÅ‡∏´‡∏ß‡∏ô": ["‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏™‡πâ‡∏ô‡πÉ‡∏¢", "‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏Å‡∏•‡πá‡∏î", "‡πÄ‡∏õ‡πá‡∏ô‡∏°‡∏±‡∏ô‡πÄ‡∏á‡∏≤", "‡πÄ‡∏£‡∏µ‡∏¢‡∏ö"],
        "‡∏™‡∏µ‡∏Ç‡∏≠‡∏á‡∏Å‡πâ‡∏≤‡∏ô‡πÄ‡∏´‡∏ô‡∏∑‡∏≠‡∏ß‡∏á‡πÅ‡∏´‡∏ß‡∏ô": ["‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•", "‡∏Ñ‡∏£‡∏µ‡∏°", "‡∏≠‡∏ö‡πÄ‡∏ä‡∏¢", "‡πÄ‡∏ó‡∏≤", "‡∏™‡πâ‡∏°", "‡∏ä‡∏°‡∏û‡∏π", "‡πÅ‡∏î‡∏á", "‡∏Ç‡∏≤‡∏ß", "‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á"],
        "‡∏™‡∏µ‡∏Ç‡∏≠‡∏á‡∏Å‡πâ‡∏≤‡∏ô‡πÉ‡∏ï‡πâ‡∏ß‡∏á‡πÅ‡∏´‡∏ß‡∏ô": ["‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•", "‡∏Ñ‡∏£‡∏µ‡∏°", "‡∏≠‡∏ö‡πÄ‡∏ä‡∏¢", "‡πÄ‡∏ó‡∏≤", "‡∏™‡πâ‡∏°", "‡∏ä‡∏°‡∏û‡∏π", "‡πÅ‡∏î‡∏á", "‡∏Ç‡∏≤‡∏ß", "‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á"],
        "‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡∏ß‡∏á‡πÅ‡∏´‡∏ß‡∏ô": ["‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô", "‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"],
        "‡∏™‡∏µ‡∏Ç‡∏≠‡∏á‡∏ß‡∏á‡πÅ‡∏´‡∏ß‡∏ô": ["‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•", "‡∏™‡πâ‡∏°", "‡∏Ç‡∏≤‡∏ß", "‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á"],
        "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏á‡πÅ‡∏´‡∏ß‡∏ô": ["‡πÑ‡∏°‡πà‡∏°‡∏µ", "‡∏´‡∏ô‡∏∂‡πà‡∏á", "‡∏™‡∏≠‡∏á"],
        "‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏Ç‡∏≠‡∏á‡∏ß‡∏á‡πÅ‡∏´‡∏ß‡∏ô": ["‡πÄ‡∏õ‡πá‡∏ô‡πÉ‡∏¢‡πÅ‡∏°‡∏á‡∏°‡∏∏‡∏°", "‡∏™‡∏•‡∏≤‡∏¢‡∏ï‡∏±‡∏ß‡πÑ‡∏î‡πâ", "‡∏ö‡∏≤‡∏ô‡∏≠‡∏≠‡∏Å", "‡πÉ‡∏´‡∏ç‡πà", "‡πÑ‡∏°‡πà‡∏°‡∏µ", "‡∏´‡πâ‡∏≠‡∏¢‡∏•‡∏á", "‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏•‡∏≠‡∏Å", "‡πÄ‡∏õ‡πá‡∏ô‡πÇ‡∏ã‡∏ô"],
        "‡∏™‡∏µ‡∏Ç‡∏≠‡∏á‡∏™‡∏õ‡∏≠‡∏£‡πå": ["‡∏î‡∏≥", "‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•", "‡∏Ñ‡∏£‡∏µ‡∏°", "‡∏ä‡πá‡∏≠‡∏Å‡πÇ‡∏Å‡πÅ‡∏•‡∏ï", "‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß", "‡∏™‡πâ‡∏°", "‡∏°‡πà‡∏ß‡∏á", "‡∏Ç‡∏≤‡∏ß", "‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á"],
        "‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏Å‡∏£": ["‡∏´‡∏ô‡∏≤‡πÅ‡∏ô‡πà‡∏ô", "‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°", "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏°‡∏≤‡∏Å", "‡∏Å‡∏£‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏£‡∏∞‡∏à‡∏≤‡∏¢", "‡∏´‡∏•‡∏≤‡∏¢‡∏ï‡πâ‡∏ô", "‡∏ï‡πâ‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß"],
        "‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏≠‡∏≤‡∏®‡∏±‡∏¢": ["‡∏´‡∏ç‡πâ‡∏≤", "‡πÉ‡∏ö‡πÑ‡∏°‡πâ", "‡∏ó‡∏∏‡πà‡∏á‡∏´‡∏ç‡πâ‡∏≤", "‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô", "‡πÄ‡∏Ç‡∏ï‡πÄ‡∏°‡∏∑‡∏≠‡∏á", "‡∏Å‡∏≠‡∏á‡∏Ç‡∏¢‡∏∞", "‡∏õ‡πà‡∏≤"]
    }
    encoding_dict = {
        "‡∏£‡∏π‡∏õ‡∏£‡πà‡∏≤‡∏á‡∏´‡∏°‡∏ß‡∏Å‡πÄ‡∏´‡πá‡∏î": {"‡∏£‡∏∞‡∏Ü‡∏±‡∏á": 0, "‡∏Å‡∏£‡∏ß‡∏¢": 1, "‡πÇ‡∏Ñ‡πâ‡∏á‡∏ô‡∏π‡∏ô": 2, "‡πÅ‡∏ö‡∏ô": 3, "‡∏°‡∏µ‡∏¢‡∏≠‡∏î‡πÅ‡∏´‡∏•‡∏°": 4, "‡∏ö‡∏∏‡πã‡∏°‡∏•‡∏∂‡∏Å": 5},
        "‡∏û‡∏∑‡πâ‡∏ô‡∏ú‡∏¥‡∏ß‡∏´‡∏°‡∏ß‡∏Å‡πÄ‡∏´‡πá‡∏î": {"‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏™‡πâ‡∏ô‡πÉ‡∏¢": 0, "‡∏°‡∏µ‡∏£‡πà‡∏≠‡∏á": 1, "‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏Å‡∏•‡πá‡∏î": 2, "‡πÄ‡∏£‡∏µ‡∏¢‡∏ö": 3},
        "‡∏™‡∏µ‡∏´‡∏°‡∏ß‡∏Å‡πÄ‡∏´‡πá‡∏î": {"‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•": 0, "‡∏Ñ‡∏£‡∏µ‡∏°": 1, "‡∏≠‡∏ö‡πÄ‡∏ä‡∏¢": 2, "‡πÄ‡∏ó‡∏≤": 3, "‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß": 4, "‡∏ä‡∏°‡∏û‡∏π": 5, "‡∏°‡πà‡∏ß‡∏á": 6, "‡πÅ‡∏î‡∏á": 7, "‡∏Ç‡∏≤‡∏ß": 8, "‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á": 9},
        "‡∏°‡∏µ‡∏£‡∏≠‡∏¢‡∏ä‡πâ‡∏≥‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà": {"‡∏°‡∏µ": 1, "‡πÑ‡∏°‡πà‡∏°‡∏µ": 0},
        "‡∏Å‡∏•‡∏¥‡πà‡∏ô": {"‡∏≠‡∏±‡∏•‡∏°‡∏≠‡∏ô‡∏î‡πå": 0, "‡πÇ‡∏õ‡πä‡∏¢‡∏Å‡∏±‡πä‡∏Å": 1, "‡∏Å‡∏•‡∏¥‡πà‡∏ô‡πÑ‡∏´‡∏°‡πâ": 2, "‡∏Å‡∏•‡∏¥‡πà‡∏ô‡∏õ‡∏•‡∏≤": 3, "‡∏Å‡∏•‡∏¥‡πà‡∏ô‡πÄ‡∏´‡∏°‡πá‡∏ô": 4, "‡∏Å‡∏•‡∏¥‡πà‡∏ô‡∏≠‡∏±‡∏ö": 5, "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏•‡∏¥‡πà‡∏ô": 6, "‡∏Å‡∏•‡∏¥‡πà‡∏ô‡∏â‡∏∏‡∏ô": 7, "‡∏Å‡∏•‡∏¥‡πà‡∏ô‡πÄ‡∏ú‡πá‡∏î": 8},
        "‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏£‡∏µ‡∏ö": {"‡∏ï‡∏¥‡∏î‡∏Å‡πâ‡∏≤‡∏ô": 0, "‡∏´‡πâ‡∏≠‡∏¢‡∏•‡∏á": 1, "‡πÑ‡∏°‡πà‡∏ï‡∏¥‡∏î": 2, "‡∏°‡∏µ‡∏£‡∏≠‡∏¢‡∏ö‡∏≤‡∏Å": 3},
        "‡∏£‡∏∞‡∏¢‡∏∞‡∏´‡πà‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏£‡∏µ‡∏ö": {"‡∏ä‡∏¥‡∏î": 0, "‡πÅ‡∏ô‡πà‡∏ô": 1, "‡∏´‡πà‡∏≤‡∏á": 2},
        "‡∏Ç‡∏ô‡∏≤‡∏î‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏£‡∏µ‡∏ö": {"‡∏Å‡∏ß‡πâ‡∏≤‡∏á": 0, "‡πÅ‡∏Ñ‡∏ö": 1},
        "‡∏™‡∏µ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏£‡∏µ‡∏ö": {"‡∏î‡∏≥": 0, "‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•": 1, "‡∏Ñ‡∏£‡∏µ‡∏°": 2, "‡∏ä‡πá‡∏≠‡∏Å‡πÇ‡∏Å‡πÅ‡∏•‡∏ï": 3, "‡πÄ‡∏ó‡∏≤": 4, "‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß": 5, "‡∏™‡πâ‡∏°": 6, "‡∏ä‡∏°‡∏û‡∏π": 7, "‡∏°‡πà‡∏ß‡∏á": 8, "‡πÅ‡∏î‡∏á": 9, "‡∏Ç‡∏≤‡∏ß": 10, "‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á": 11},
        "‡∏£‡∏π‡∏õ‡∏ó‡∏£‡∏á‡∏Å‡πâ‡∏≤‡∏ô": {"‡∏Ç‡∏¢‡∏≤‡∏¢‡∏Ç‡∏∂‡πâ‡∏ô": 0, "‡πÄ‡∏£‡∏µ‡∏¢‡∏ß‡∏•‡∏á": 1},
        "‡∏£‡∏≤‡∏Å‡∏Ç‡∏≠‡∏á‡∏Å‡πâ‡∏≤‡∏ô": {"‡∏´‡∏±‡∏ß‡∏Å‡∏•‡∏°": 0, "‡∏Å‡∏£‡∏∞‡∏ö‡∏≠‡∏Å": 1, "‡∏ñ‡πâ‡∏ß‡∏¢": 2, "‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ô": 3, "‡∏°‡∏µ‡πÄ‡∏™‡πâ‡∏ô‡πÉ‡∏¢‡∏£‡∏≤‡∏Å": 4, "‡∏ù‡∏±‡∏á‡∏£‡∏≤‡∏Å‡∏•‡∏∂‡∏Å": 5, "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•": 6},
        "‡∏û‡∏∑‡πâ‡∏ô‡∏ú‡∏¥‡∏ß‡∏Å‡πâ‡∏≤‡∏ô‡πÄ‡∏´‡∏ô‡∏∑‡∏≠‡∏ß‡∏á‡πÅ‡∏´‡∏ß‡∏ô": {"‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏™‡πâ‡∏ô‡πÉ‡∏¢": 0, "‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏Å‡∏•‡πá‡∏î": 1, "‡πÄ‡∏õ‡πá‡∏ô‡∏°‡∏±‡∏ô‡πÄ‡∏á‡∏≤": 2, "‡πÄ‡∏£‡∏µ‡∏¢‡∏ö": 3},
        "‡∏û‡∏∑‡πâ‡∏ô‡∏ú‡∏¥‡∏ß‡∏Å‡πâ‡∏≤‡∏ô‡πÉ‡∏ï‡πâ‡∏ß‡∏á‡πÅ‡∏´‡∏ß‡∏ô": {"‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏™‡πâ‡∏ô‡πÉ‡∏¢": 0, "‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏Å‡∏•‡πá‡∏î": 1, "‡πÄ‡∏õ‡πá‡∏ô‡∏°‡∏±‡∏ô‡πÄ‡∏á‡∏≤": 2, "‡πÄ‡∏£‡∏µ‡∏¢‡∏ö": 3},
        "‡∏™‡∏µ‡∏Ç‡∏≠‡∏á‡∏Å‡πâ‡∏≤‡∏ô‡πÄ‡∏´‡∏ô‡∏∑‡∏≠‡∏ß‡∏á‡πÅ‡∏´‡∏ß‡∏ô": {"‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•": 0, "‡∏Ñ‡∏£‡∏µ‡∏°": 1, "‡∏≠‡∏ö‡πÄ‡∏ä‡∏¢": 2, "‡πÄ‡∏ó‡∏≤": 3, "‡∏™‡πâ‡∏°": 4, "‡∏ä‡∏°‡∏û‡∏π": 5, "‡πÅ‡∏î‡∏á": 6, "‡∏Ç‡∏≤‡∏ß": 7, "‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á": 8},
        "‡∏™‡∏µ‡∏Ç‡∏≠‡∏á‡∏Å‡πâ‡∏≤‡∏ô‡πÉ‡∏ï‡πâ‡∏ß‡∏á‡πÅ‡∏´‡∏ß‡∏ô": {"‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•": 0, "‡∏Ñ‡∏£‡∏µ‡∏°": 1, "‡∏≠‡∏ö‡πÄ‡∏ä‡∏¢": 2, "‡πÄ‡∏ó‡∏≤": 3, "‡∏™‡πâ‡∏°": 4, "‡∏ä‡∏°‡∏û‡∏π": 5, "‡πÅ‡∏î‡∏á": 6, "‡∏Ç‡∏≤‡∏ß": 7, "‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á": 8},
        "‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡∏ß‡∏á‡πÅ‡∏´‡∏ß‡∏ô": {"‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô": 0, "‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î": 1},
        "‡∏™‡∏µ‡∏Ç‡∏≠‡∏á‡∏ß‡∏á‡πÅ‡∏´‡∏ß‡∏ô": {"‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•": 0, "‡∏™‡πâ‡∏°": 1, "‡∏Ç‡∏≤‡∏ß": 2, "‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á": 3},
        "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏á‡πÅ‡∏´‡∏ß‡∏ô": {"‡πÑ‡∏°‡πà‡∏°‡∏µ": 0, "‡∏´‡∏ô‡∏∂‡πà‡∏á": 1, "‡∏™‡∏≠‡∏á": 2},
        "‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏Ç‡∏≠‡∏á‡∏ß‡∏á‡πÅ‡∏´‡∏ß‡∏ô": {"‡πÄ‡∏õ‡πá‡∏ô‡πÉ‡∏¢‡πÅ‡∏°‡∏á‡∏°‡∏∏‡∏°": 0, "‡∏™‡∏•‡∏≤‡∏¢‡∏ï‡∏±‡∏ß‡πÑ‡∏î‡πâ": 1, "‡∏ö‡∏≤‡∏ô‡∏≠‡∏≠‡∏Å": 2, "‡πÉ‡∏´‡∏ç‡πà": 3, "‡πÑ‡∏°‡πà‡∏°‡∏µ": 4, "‡∏´‡πâ‡∏≠‡∏¢‡∏•‡∏á": 5, "‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏•‡∏≠‡∏Å": 6, "‡πÄ‡∏õ‡πá‡∏ô‡πÇ‡∏ã‡∏ô": 7},
        "‡∏™‡∏µ‡∏Ç‡∏≠‡∏á‡∏™‡∏õ‡∏≠‡∏£‡πå": {"‡∏î‡∏≥": 0, "‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•": 1, "‡∏Ñ‡∏£‡∏µ‡∏°": 2, "‡∏ä‡πá‡∏≠‡∏Å‡πÇ‡∏Å‡πÅ‡∏•‡∏ï": 3, "‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß": 4, "‡∏™‡πâ‡∏°": 5, "‡∏°‡πà‡∏ß‡∏á": 6, "‡∏Ç‡∏≤‡∏ß": 7, "‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á": 8},
        "‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏Å‡∏£": {"‡∏´‡∏ô‡∏≤‡πÅ‡∏ô‡πà‡∏ô": 0, "‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°": 1, "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏°‡∏≤‡∏Å": 2, "‡∏Å‡∏£‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏£‡∏∞‡∏à‡∏≤‡∏¢": 3, "‡∏´‡∏•‡∏≤‡∏¢‡∏ï‡πâ‡∏ô": 4, "‡∏ï‡πâ‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß": 5},
        "‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏≠‡∏≤‡∏®‡∏±‡∏¢": {"‡∏´‡∏ç‡πâ‡∏≤": 0, "‡πÉ‡∏ö‡πÑ‡∏°‡πâ": 1, "‡∏ó‡∏∏‡πà‡∏á‡∏´‡∏ç‡πâ‡∏≤": 2, "‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô": 3, "‡πÄ‡∏Ç‡∏ï‡πÄ‡∏°‡∏∑‡∏≠‡∏á": 4, "‡∏Å‡∏≠‡∏á‡∏Ç‡∏¢‡∏∞": 5, "‡∏õ‡πà‡∏≤": 6}
    }

    user_input = {}
    for key, values in attributes.items():
        user_input[key] = st.selectbox(key, values)

    encoded_values = [encoding_dict[key][value] for key, value in user_input.items()]
    
    if len(encoded_values) == 22:
        X_input = torch.tensor([encoded_values], dtype=torch.float32)

        # ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏•
        model = MushroomModelV0()  # ‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏ô‡∏µ‡πâ
        model.load_state_dict(torch.load("ClassificationModel0.pth"))
        model.eval()  # ‡∏ï‡∏±‡πâ‡∏á‡πÇ‡∏°‡πÄ‡∏î‡∏•‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÇ‡∏´‡∏°‡∏î‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô

        if st.button("üîç ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå"):
            with torch.no_grad():
                prediction = model(X_input)
                probability = torch.sigmoid(prediction)  # ‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏õ‡πá‡∏ô Tensor
                predicted_class = torch.round(probability).item()  # ‡πÉ‡∏ä‡πâ torch.round ‡πÅ‡∏•‡∏∞‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô float

            confidence_percentage = probability.item() * 100  # ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå

            if predicted_class == 1:
                st.success(f"‚úÖ ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå: ‡πÄ‡∏´‡πá‡∏î‡∏ä‡∏ô‡∏¥‡∏î‡∏ô‡∏µ‡πâ‡∏Å‡∏¥‡∏ô‡πÑ‡∏î‡πâ (‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à: {confidence_percentage:.2f}%)")
            else:
                st.error(f"‚ùå ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå: ‡πÄ‡∏´‡πá‡∏î‡∏ä‡∏ô‡∏¥‡∏î‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏û‡∏¥‡∏© (‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à: {confidence_percentage:.2f}%)")
    else:
        st.error("‚ùå ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö 22 ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö.")

    